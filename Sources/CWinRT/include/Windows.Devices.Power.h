// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.System.Power.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CPower_CIBattery_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPower_CIBattery_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPower_CIBattery __x_ABI_CWindows_CDevices_CPower_CIBattery;

#endif // ____x_ABI_CWindows_CDevices_CPower_CIBattery_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPower_CIBatteryReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPower_CIBatteryReport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPower_CIBatteryReport __x_ABI_CWindows_CDevices_CPower_CIBatteryReport;

#endif // ____x_ABI_CWindows_CDevices_CPower_CIBatteryReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPower_CIBatteryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPower_CIBatteryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPower_CIBatteryStatics __x_ABI_CWindows_CDevices_CPower_CIBatteryStatics;

#endif // ____x_ABI_CWindows_CDevices_CPower_CIBatteryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPower_CIPowerGridData_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPower_CIPowerGridData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPower_CIPowerGridData __x_ABI_CWindows_CDevices_CPower_CIPowerGridData;

#endif // ____x_ABI_CWindows_CDevices_CPower_CIPowerGridData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast;

#endif // ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics;

#endif // ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBatteryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
        __x_ABI_CWindows_CDevices_CPower_CIBattery** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBatteryVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBatteryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBatteryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBatteryVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBatteryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CPower__CBattery_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        __x_ABI_CWindows_CDevices_CPower_CIPowerGridData** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CPower_CIPowerGridData** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CPower_CIPowerGridData** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        __x_ABI_CWindows_CDevices_CPower_CIPowerGridData* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CPower_CIPowerGridData** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridDataVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1_IInspectable __x_ABI_C__FIEventHandler_1_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1_IInspectable;

    typedef struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1_IInspectableVtbl;

    interface __x_ABI_C__FIEventHandler_1_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable* This,
        __x_ABI_CWindows_CDevices_CPower_CIBattery* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

typedef enum __x_ABI_CWindows_CSystem_CPower_CBatteryStatus __x_ABI_CWindows_CSystem_CPower_CBatteryStatus;

#if !defined(____x_ABI_CWindows_CDevices_CPower_CIBattery_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPower_CIBattery_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPower_CIBatteryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DeviceId)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetReport)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
        __x_ABI_CWindows_CDevices_CPower_CIBatteryReport** result);
    HRESULT (STDMETHODCALLTYPE* add_ReportUpdated)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPower__CBattery_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReportUpdated)(__x_ABI_CWindows_CDevices_CPower_CIBattery* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPower_CIBatteryVtbl;

    interface __x_ABI_CWindows_CDevices_CPower_CIBattery
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPower_CIBatteryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPower_CIBattery;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPower_CIBattery_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPower_CIBatteryReport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPower_CIBatteryReport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPower_CIBatteryReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChargeRateInMilliwatts)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_DesignCapacityInMilliwattHours)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_FullChargeCapacityInMilliwattHours)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_RemainingCapacityInMilliwattHours)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CPower_CIBatteryReport* This,
        enum __x_ABI_CWindows_CSystem_CPower_CBatteryStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPower_CIBatteryReportVtbl;

    interface __x_ABI_CWindows_CDevices_CPower_CIBatteryReport
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPower_CIBatteryReportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPower_CIBatteryReport;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPower_CIBatteryReport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPower_CIBatteryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPower_CIBatteryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPower_CIBatteryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AggregateBattery)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
        __x_ABI_CWindows_CDevices_CPower_CIBattery** result);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CPower__CBattery** result);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CPower_CIBatteryStatics* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPower_CIBatteryStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPower_CIBatteryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPower_CIBatteryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPower_CIBatteryStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPower_CIBatteryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPower_CIPowerGridData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPower_CIPowerGridData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPower_CIPowerGridDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Severity)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_IsLowUserExperienceImpact)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridData* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPower_CIPowerGridDataVtbl;

    interface __x_ABI_CWindows_CDevices_CPower_CIPowerGridData
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPower_CIPowerGridDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPower_CIPowerGridData;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPower_CIPowerGridData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_BlockDuration)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Forecast)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CPower__CPowerGridData** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastVtbl;

    interface __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForecast)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
        __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecast** result);
    HRESULT (STDMETHODCALLTYPE* add_ForecastUpdated)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
        __x_ABI_C__FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ForecastUpdated)(__x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CPower_CIPowerGridForecastStatics_INTERFACE_DEFINED__) */
    
