// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.AI.Actions.h"
#include "Windows.UI.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2 __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2 __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3 __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2 __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2;

#endif // ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable* This,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CAI_CActions_CIActionEntity_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CIActionEntity_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CIActionEntity __x_ABI_CWindows_CAI_CActions_CIActionEntity;

#endif // ____x_ABI_CWindows_CAI_CActions_CIActionEntity_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CAI_CActions_CActionEntityKind __x_ABI_CWindows_CAI_CActions_CActionEntityKind;

#ifndef ____x_ABI_CWindows_CAI_CActions_CIActionFeedback_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CIActionFeedback_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CIActionFeedback __x_ABI_CWindows_CAI_CActions_CIActionFeedback;

#endif // ____x_ABI_CWindows_CAI_CActions_CIActionFeedback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CIActionInvocationContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CIActionInvocationContext_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext;

#endif // ____x_ABI_CWindows_CAI_CActions_CIActionInvocationContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CWindowId __x_ABI_CWindows_CUI_CWindowId;

#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalogVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAllActions)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition*** result);
    HRESULT (STDMETHODCALLTYPE* add_Changed)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CAI__CActions__CHosting__CActionCatalog_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Changed)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalogVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalogVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog_INTERFACE_DEFINED__) */
    
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetActionsForInputs)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This,
        UINT32 inputEntitiesLength,
        __x_ABI_CWindows_CAI_CActions_CIActionEntity** inputEntities,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance*** result);
    HRESULT (STDMETHODCALLTYPE* GetActionsForInputs2)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2* This,
        UINT32 inputEntitiesLength,
        __x_ABI_CWindows_CAI_CActions_CIActionEntity** inputEntities,
        struct __x_ABI_CWindows_CUI_CWindowId invokerWindowId,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance*** result);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2Vtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionCatalog2_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IconFullPath)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PackageFamilyName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetInputs)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo*** result);
    HRESULT (STDMETHODCALLTYPE* GetOutputs)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo*** result);
    HRESULT (STDMETHODCALLTYPE* GetOverloads)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition* This,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload*** result);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinitionVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplaysUI)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_UsesGenerativeAI)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_SchemaVersion)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2Vtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition2_INTERFACE_DEFINED__) */
    
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PackageRelativeApplicationId)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3Vtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition3_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Name)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
        enum __x_ABI_CWindows_CAI_CActions_CActionEntityKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo* This,
        enum __x_ABI_CWindows_CAI_CActions_CActionEntityKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfoVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo_INTERFACE_DEFINED__) */
    
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayInfo)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_Definition)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionDefinition** value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
        __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext** value);
    HRESULT (STDMETHODCALLTYPE* InvokeAsync)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstance_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfoVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionInstanceDisplayInfo_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverloadVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DescriptionTemplate)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* GetInputs)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
        UINT32* resultLength,
        __x_ABI_CWindows_CAI_CActions_CHosting_CIActionEntityRegistrationInfo*** result);
    HRESULT (STDMETHODCALLTYPE* InvokeAsync)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload* This,
        __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext* context,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverloadVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverloadVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload_INTERFACE_DEFINED__) */
    
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InvokeFeedbackAsync)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This,
        __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext* context,
        __x_ABI_CWindows_CAI_CActions_CIActionFeedback* feedback,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* GetSupportsFeedback)(__x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2Vtbl;

    interface __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CHosting_CIActionOverload2_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

