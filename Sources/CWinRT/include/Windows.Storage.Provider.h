// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Search.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2 __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2 __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2 __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3 __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2 __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource;

#endif // ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUriVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUriVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUriVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CFoundation__CUri_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderShareLinkState __x_ABI_CWindows_CStorage_CProvider_CStorageProviderShareLinkState;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState;

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderShareLinkState* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkStateVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkStateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkStateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkStateVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkStateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if !defined(____x_ABI_C__FIIterator_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_GUID __x_ABI_C__FIIterator_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_GUID;

    typedef struct __x_ABI_C__FIIterator_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_GUID* This,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_GUID* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_GUID* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_GUID* This,
        UINT32 itemsLength,
        GUID* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_GUIDVtbl;

    interface __x_ABI_C__FIIterator_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_GUID_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_GUID __x_ABI_C__FIIterable_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_GUID;

    typedef struct __x_ABI_C__FIIterable_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_GUID* This,
        __x_ABI_C__FIIterator_1_GUID** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_GUIDVtbl;

    interface __x_ABI_C__FIIterable_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_GUID_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItem __x_ABI_CWindows_CStorage_CIStorageItem;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CStorage_CSearch_CSortEntry __x_ABI_CWindows_CStorage_CSearch_CSortEntry;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        struct __x_ABI_CWindows_CStorage_CSearch_CSortEntry* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CStorage_CSearch_CSortEntry* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_GUID_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_GUID_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_GUID __x_ABI_C__FIVectorView_1_GUID;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_GUID;

    typedef struct __x_ABI_C__FIVectorView_1_GUIDVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_GUID* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_GUID* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_GUID* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_GUID* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_GUID* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_GUID* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_GUID* This,
        UINT32 index,
        GUID* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_GUID* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_GUID* This,
        GUID value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_GUID* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        GUID* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_GUIDVtbl;

    interface __x_ABI_C__FIVectorView_1_GUID
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_GUIDVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_GUID_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        UINT32 index,
        struct __x_ABI_CWindows_CStorage_CSearch_CSortEntry* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        struct __x_ABI_CWindows_CStorage_CSearch_CSortEntry value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CStorage_CSearch_CSortEntry* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommandVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* This,
        struct __x_ABI_CWindows_CUI_CColor* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable* This,
        __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs* This,
        __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* sender,
        __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CReadActivationMode __x_ABI_CWindows_CStorage_CProvider_CReadActivationMode;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CUIStatus __x_ABI_CWindows_CStorage_CProvider_CUIStatus;

typedef enum __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode;

enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions
    {
        __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions_None = 0,
    __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions_RequireUpdateOnAccess = 0x1,
    __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions_UseCachedFileWhenOffline = 0x2,
    __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions_DenyAccessWhenOffline = 0x4,
};

enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget
    {
        __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget_Local = 0,
    __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget_Remote = 1,
};

enum __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus
    {
        __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus_Incomplete = 0,
    __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus_Complete = 1,
    __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus_UserInputNeeded = 2,
    __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus_CurrentlyUnavailable = 3,
    __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus_Failed = 4,
    __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus_CompleteAndRenamed = 5,
};

enum __x_ABI_CWindows_CStorage_CProvider_CReadActivationMode
    {
        __x_ABI_CWindows_CStorage_CProvider_CReadActivationMode_NotNeeded = 0,
    __x_ABI_CWindows_CStorage_CProvider_CReadActivationMode_BeforeAccess = 1,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy_None = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy_Allowed = 0x1,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_Partial = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_Progressive = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_Full = 2,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_AlwaysFull = 3,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_None = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_ValidationRequired = 0x1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_StreamingAllowed = 0x2,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_AutoDehydrationAllowed = 0x4,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_AllowFullRestartHydration = 0x8,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_Default = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileCreationTime = 0x1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileReadOnlyAttribute = 0x2,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileHiddenAttribute = 0x4,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileSystemAttribute = 0x8,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryCreationTime = 0x10,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryReadOnlyAttribute = 0x20,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryHiddenAttribute = 0x40,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectorySystemAttribute = 0x80,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileLastWriteTime = 0x100,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryLastWriteTime = 0x200,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_PreserveInsyncForSyncEngine = 0x80000000,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus_Available = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus_Enrolling = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus_Enrolled = 2,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy_Full = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy_AlwaysFull = 2,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode_Unknown = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode_Personal = 1,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_Search = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_Recommended = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_Favorites = 2,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_Recent = 3,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_Shared = 4,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_RelatedFiles = 5,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind_RelatedConversations = 6,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind_Rendered = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind_Opened = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind_SuggestionResponseReceived = 2,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind_Lexical = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind_Semantic = 1,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_Success = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_Error = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_Timeout = 2,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_NoNetwork = 3,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_NetworkError = 4,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_NotSignedIn = 5,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_QueryNotSupported = 6,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus_SortOrderNotSupported = 7,
};

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderShareLinkState
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderShareLinkState_Enabled = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderShareLinkState_Disabled = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState_InSync = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState_Syncing = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState_Paused = 2,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState_Error = 3,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState_Warning = 4,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState_Offline = 5,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState_Enabled = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState_Disabled = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState_Hidden = 2,
};

enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus
    {
        __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus_Success = 0,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus_NoSyncRoot = 1,
    __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus_FileNotFound = 2,
};

enum __x_ABI_CWindows_CStorage_CProvider_CUIStatus
    {
        __x_ABI_CWindows_CStorage_CProvider_CUIStatus_Unavailable = 0,
    __x_ABI_CWindows_CStorage_CProvider_CUIStatus_Hidden = 1,
    __x_ABI_CWindows_CStorage_CProvider_CUIStatus_Visible = 2,
    __x_ABI_CWindows_CStorage_CProvider_CUIStatus_Complete = 3,
};

enum __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode
    {
        __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode_ReadOnly = 0,
    __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode_NotNeeded = 1,
    __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode_AfterWrite = 2,
};

#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* args);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandlerVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler;
    #endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetUpdateInformation)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING contentId,
        enum __x_ABI_CWindows_CStorage_CProvider_CReadActivationMode readMode,
        enum __x_ABI_CWindows_CStorage_CProvider_CWriteActivationMode writeMode,
        enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileOptions options);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Title)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateTarget)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CCachedFileTarget* value);
    HRESULT (STDMETHODCALLTYPE* add_FileUpdateRequested)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI___x_ABI_CWindows__CStorage__CProvider__CFileUpdateRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FileUpdateRequested)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UIRequested)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CCachedFileUpdaterUI_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_UIRequested)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_UIStatus)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CUIStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUIVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UpdateRequest)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This,
        __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This,
        __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2Vtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentId)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_File)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
        __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral** value);
    HRESULT (STDMETHODCALLTYPE* UpdateLocalFile)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserInputNeededMessage)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UserInputNeededMessage)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2Vtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferralVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This,
        __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FileExtension)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IconResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This,
        HSTRING fileExtension,
        HSTRING iconResource,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactoryVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus value);
    HRESULT (STDMETHODCALLTYPE* get_ContentUri)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentUri)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ContentId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ContentId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResultVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Path)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResultVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SetAsync)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* item,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty* itemProperties,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Value)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_IconResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IconResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemProperty_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinitionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayNameResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinitionVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetItemProperties)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource* This,
        HSTRING itemPath,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemProperty** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySourceVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderItemPropertySource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KnownFolderId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_KnownFolderId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
        GUID value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderKnownFolderSyncStatus value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntryVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderEntry_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProviderDisplayName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderDisplayName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_KnownFolderEntries)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderKnownFolderEntry** value);
    HRESULT (STDMETHODCALLTYPE* get_SyncRequested)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler** value);
    HRESULT (STDMETHODCALLTYPE* put_SyncRequested)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestedHandler* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetKnownFolderSyncInfo)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfo** result);
    HRESULT (STDMETHODCALLTYPE* add_KnownFolderSyncInfoChanged)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderKnownFolderSyncInfoSource_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_KnownFolderSyncInfoChanged)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetKnownFolderSyncInfoSource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSource** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactoryVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncInfoSourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KnownFolders)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This,
        __x_ABI_C__FIVectorView_1_GUID** value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgsVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderKnownFolderSyncRequestArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Message)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Command)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_Command)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUIVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsPropertySupported)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities* This,
        HSTRING propertyCanonicalName,
        boolean* isSupported);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilitiesVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderPropertyCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultKind value);
    HRESULT (STDMETHODCALLTYPE* get_ResultId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ResultId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteFileId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteFileId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FilePath)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_FilePath)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RequestedProperties)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
        UINT32* resultLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult*** result);
    HRESULT (STDMETHODCALLTYPE* get_QueryResultId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_QueryResultId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchQueryStatus value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory* This,
        UINT32 resultsLength,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResult** results,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactoryVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSetFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QuotaTotalInBytes)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_QuotaTotalInBytes)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_QuotaUsedInBytes)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* put_QuotaUsedInBytes)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        UINT64 value);
    HRESULT (STDMETHODCALLTYPE* get_QuotaUsedLabel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_QuotaUsedLabel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_QuotaUsedColor)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor** value);
    HRESULT (STDMETHODCALLTYPE* put_QuotaUsedColor)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColor* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUIVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Find)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* options,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQueryResultSet** result);
    HRESULT (STDMETHODCALLTYPE* ReportUsage)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderResultUsageKind resultUsageKind,
        HSTRING remoteFileId,
        HSTRING resultId,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan latency);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateSearchHandler)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory* This,
        HSTRING cloudProviderId,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandler** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactoryVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchHandlerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UserQuery)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SortOrder)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CSearch__CSortEntry** value);
    HRESULT (STDMETHODCALLTYPE* get_ProgrammaticQuery)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResults)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FolderScope)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_QueryId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PropertiesToFetch)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptionsVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchQueryOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MatchScore)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_MatchScore)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_MatchKind)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind* value);
    HRESULT (STDMETHODCALLTYPE* put_MatchKind)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderSearchMatchKind value);
    HRESULT (STDMETHODCALLTYPE* get_MatchedPropertyName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_MatchedPropertyName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResultVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSearchResult_INTERFACE_DEFINED__) */
    
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateLinkAsync)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* storageItemList,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CFoundation__CUri** operation);
    HRESULT (STDMETHODCALLTYPE* GetDefaultAccessControlStringAsync)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* storageItemList,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* GetState)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* storageItemList,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderShareLinkState** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSourceVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderShareLinkSource_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUIVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProviderState)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState* value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderState)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderState value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderStateLabel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderStateLabel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderStateIcon)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderStateIcon)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_SyncStatusCommand)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_SyncStatusCommand)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_QuotaUI)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI** value);
    HRESULT (STDMETHODCALLTYPE* put_QuotaUI)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderQuotaUI* value);
    HRESULT (STDMETHODCALLTYPE* get_MoreInfoUI)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI** value);
    HRESULT (STDMETHODCALLTYPE* put_MoreInfoUI)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderMoreInfoUI* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderPrimaryCommand)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderPrimaryCommand)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_ProviderSecondaryCommands)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand** value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderSecondaryCommands)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderUICommand* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUIVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUIVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetStatusUI)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUI** result);
    HRESULT (STDMETHODCALLTYPE* add_StatusUIChanged)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CProvider__CIStorageProviderStatusUISource_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StatusUIChanged)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetStatusUISource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory* This,
        HSTRING syncRootId,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISource** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactoryVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderStatusUISourceFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Id)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** value);
    HRESULT (STDMETHODCALLTYPE* put_Context)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* put_Path)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayNameResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IconResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_IconResource)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HydrationPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_HydrationPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_HydrationPolicyModifier)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier* value);
    HRESULT (STDMETHODCALLTYPE* put_HydrationPolicyModifier)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier value);
    HRESULT (STDMETHODCALLTYPE* get_PopulationPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_PopulationPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_InSyncPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_InSyncPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_HardlinkPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy* value);
    HRESULT (STDMETHODCALLTYPE* put_HardlinkPolicy)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_ShowSiblingsAsGroup)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ShowSiblingsAsGroup)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Version)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionMode)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ProtectionMode)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderProtectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_AllowPinning)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AllowPinning)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StorageProviderItemPropertyDefinitions)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderItemPropertyDefinition** value);
    HRESULT (STDMETHODCALLTYPE* get_RecycleBinUri)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_RecycleBinUri)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfoVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProviderId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_ProviderId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This,
        GUID value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2Vtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FallbackFileTypeInfo)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderFileTypeInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3Vtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Register)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* syncRootInformation);
    HRESULT (STDMETHODCALLTYPE* Unregister)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
        HSTRING id);
    HRESULT (STDMETHODCALLTYPE* GetSyncRootInformationForFolder)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* folder,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetSyncRootInformationForId)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
        HSTRING id,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** result);
    HRESULT (STDMETHODCALLTYPE* GetCurrentSyncRoots)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CProvider__CStorageProviderSyncRootInfo** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2Vtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommandVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Label)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Description)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Icon)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CStorageProviderUICommandState* value);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand* This);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommandVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommandVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUICommand_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetPathForContentUri)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This,
        HSTRING contentUri,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* result);
    HRESULT (STDMETHODCALLTYPE* GetContentInfoForPath)(__x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource* This,
        HSTRING path,
        __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSourceVtbl;

    interface __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSourceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource;
#endif /* !defined(____x_ABI_CWindows_CStorage_CProvider_CIStorageProviderUriSource_INTERFACE_DEFINED__) */
    
