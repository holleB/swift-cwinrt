// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics;

#endif // ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContextVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContextVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContextVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 index,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs* This,
        __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* sender,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs* This,
        __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* sender,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState;

typedef enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange;

typedef enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange;

typedef enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState;

enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState
    {
        __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_NotStarted = 0,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_Initializing = 1,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_InProgress = 2,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_Completed = 3,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_ErrorOccurred = 4,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_RebootRequired = 5,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState_Canceled = 6,
};

enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange
    {
        __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_NoChange = 0,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_HostConnectionLost = 1,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_HostConnectionRestored = 2,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_AgentConnectionLost = 3,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_AgentConnectionRestored = 4,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_InternetConnectionLost = 5,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange_InternetConnectionRestored = 6,
};

enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange
    {
        __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange_NoChange = 0,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange_CancelRequestedByUser = 1,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange_RetryRequestedByUser = 2,
};

enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState
    {
        __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_NotStarted = 0,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_InProgress = 1,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_Completed = 2,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_Failed = 3,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_Canceled = 4,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_Skipped = 5,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_Uninstalled = 6,
    __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState_RebootRequired = 7,
};

#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested* This,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* eventArgs);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested;
    #endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState* value);
    HRESULT (STDMETHODCALLTYPE* put_State)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentAgentProgressState value);
    HRESULT (STDMETHODCALLTYPE* get_ProgressPercentage)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ProgressPercentage)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_EstimatedTimeRemaining)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_EstimatedTimeRemaining)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayProgress)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayProgress)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayProgressSecondary)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayProgressSecondary)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Batches)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkloadBatch** value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentBatchIndex)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CurrentBatchIndex)(__x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* This,
        UINT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReportVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Change)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange* value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionConnectionChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Change)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange* value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionStateChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayFriendlyName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayFriendlyName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_StartTime)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_EndTime)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_EndTime)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_ErrorCode)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ErrorMessage)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ErrorMessage)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PossibleCause)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PossibleCause)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PossibleResolution)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_PossibleResolution)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_State)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState* value);
    HRESULT (STDMETHODCALLTYPE* put_State)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentWorkloadState value);
    HRESULT (STDMETHODCALLTYPE* get_StateDetails)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_StateDetails)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload* This,
        HSTRING value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayCategoryTitle)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayCategoryTitle)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BatchWorkloads)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CManagement__CSetup__CDeploymentWorkload** value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory* This,
        UINT32 id,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatch** value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactoryVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadBatchFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory* This,
        HSTRING id,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkload** value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactoryVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDeploymentWorkloadFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContextVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIDevicePreparationExecutionContext_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_SessionConnection)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionConnectionChange* value);
    HRESULT (STDMETHODCALLTYPE* get_SessionState)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        enum __x_ABI_CWindows_CManagement_CSetup_CDeploymentSessionStateChange* value);
    HRESULT (STDMETHODCALLTYPE* add_SessionStateChanged)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionStateChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SessionStateChanged)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SessionConnectionChanged)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CManagement__CSetup__CMachineProvisioningProgressReporter___x_ABI_CWindows__CManagement__CSetup__CDeploymentSessionConnectionChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SessionConnectionChanged)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ReportProgress)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        __x_ABI_CWindows_CManagement_CSetup_CIAgentProvisioningProgressReport* updateReport);
    HRESULT (STDMETHODCALLTYPE* GetDevicePreparationExecutionContextAsync)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CManagement__CSetup__CDevicePreparationExecutionContext** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForLaunchUri)(__x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* launchUri,
        __x_ABI_CWindows_CManagement_CSetup_CIDeploymentSessionHeartbeatRequested* heartbeatHandler,
        __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporter** result);

        END_INTERFACE
    } __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStaticsVtbl;

    interface __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics;
#endif /* !defined(____x_ABI_CWindows_CManagement_CSetup_CIMachineProvisioningProgressReporterStatics_INTERFACE_DEFINED__) */
    
