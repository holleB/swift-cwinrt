// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.AI.Actions.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler __x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler;

#endif // ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider __x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider;

#endif // ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#ifndef ____x_ABI_CWindows_CAI_CActions_CIActionFeedback_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CIActionFeedback_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CIActionFeedback __x_ABI_CWindows_CAI_CActions_CIActionFeedback;

#endif // ____x_ABI_CWindows_CAI_CActions_CIActionFeedback_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CAI_CActions_CIActionInvocationContext_FWD_DEFINED__
#define ____x_ABI_CWindows_CAI_CActions_CIActionInvocationContext_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext;

#endif // ____x_ABI_CWindows_CAI_CActions_CIActionInvocationContext_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#if !defined(____x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ProcessFeedbackAsync)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler* This,
        __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext* context,
        __x_ABI_CWindows_CAI_CActions_CIActionFeedback* feedback,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandlerVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CProvider_CIActionFeedbackHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CAI_CActions_CProvider_CIActionProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* InvokeAsync)(__x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider* This,
        __x_ABI_CWindows_CAI_CActions_CIActionInvocationContext* context,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CAI_CActions_CProvider_CIActionProviderVtbl;

    interface __x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CAI_CActions_CProvider_CIActionProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider;
#endif /* !defined(____x_ABI_CWindows_CAI_CActions_CProvider_CIActionProvider_INTERFACE_DEFINED__) */
    
