// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.System.h"
#include "Windows.UI.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Text.h"
#include "Windows.UI.Text.Core.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics;

#endif // ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult;

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRectVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect_INTERFACE_DEFINED__
    
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* sender,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs_INTERFACE_DEFINED__
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CVirtualKey __x_ABI_CWindows_CSystem_CVirtualKey;

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef struct __x_ABI_CWindows_CUI_CCore_CCorePhysicalKeyStatus __x_ABI_CWindows_CUI_CCore_CCorePhysicalKeyStatus;

typedef enum __x_ABI_CWindows_CUI_CText_CCore_CCoreTextFormatUpdatingReason __x_ABI_CWindows_CUI_CText_CCore_CCoreTextFormatUpdatingReason;

typedef enum __x_ABI_CWindows_CUI_CText_CCore_CCoreTextInputScope __x_ABI_CWindows_CUI_CText_CCore_CCoreTextInputScope;

typedef struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange;

typedef enum __x_ABI_CWindows_CUI_CText_CUnderlineType __x_ABI_CWindows_CUI_CText_CUnderlineType;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode;

typedef enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes;

typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId;

typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextInputServiceSubscription __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextInputServiceSubscription;

typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyle __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyle;

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType_Undefined = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType_HardwareKeyboard = 1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType_SoftwareKeyboard = 2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType_Gamepad = 3,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType_Injection = 4,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_InEditing = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_Pending = 1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_Completed = 2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_Overridden = 3,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_Outrun = 4,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_Rejected = 5,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CPayloadResult_Canceled = 6,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute_None = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute_Selection = 1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute_Text = 2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute_Property = 3,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute_Layout = 4,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures_None = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures_ReadText = 0x1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures_WriteText = 0x2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures_AugmentText = 0x4,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings_None = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings_Private = 0x1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings_Multiline = 0x2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings_VerticalWriting = 0x4,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_External = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_HardwareKeyTyped = 1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_SoftwareKeyTyped = 2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_KeyboardImeInsertion = 3,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_OtherImeInsertion = 4,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_Reconversion = 5,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_AutoCompletion = 6,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource_Mixed = 7,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_Undefined = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_AlphanumericHalfWidth = 1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_AlphanumericFullWidth = 2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_NativeHalfWidth = 3,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_NativeFullWidth = 4,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_KatakanaHalfWidth = 5,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_KatakanaFullWidth = 6,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_NativeHalfWidthNativeSymbol = 7,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_NativeFullWidthNativeSymbol = 8,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_NoConversion = 9,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_RequestConversion = 10,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode_NativeEudc = 11,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes
    {
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes_None = 0,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes_TextColor = 0x1,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes_BackgroundColor = 0x2,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes_UnderlineColor = 0x4,
    __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes_UnderlineType = 0x8,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId
    {
        UINT32 Value;
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextInputServiceSubscription
    {
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures requiredEnabledFeatures;
    enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures requiredDisabledFeatures;
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyle
    {
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyleAttributes mask;
    struct __x_ABI_CWindows_CUI_CColor textColor;
    struct __x_ABI_CWindows_CUI_CColor backgroundColor;
    struct __x_ABI_CWindows_CUI_CColor underlineColor;
    enum __x_ABI_CWindows_CUI_CText_CUnderlineType underlineType;
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NewConversionMode)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIConversionModeChangedEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxInfo)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIFocusEnteredEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DelegationOn)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIInputDelegationModeChangedEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_VirtualKey)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyStatus)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        struct __x_ABI_CWindows_CUI_CCore_CCorePhysicalKeyStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Unicode)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CKeyEventDeviceType* value);
    HRESULT (STDMETHODCALLTYPE* IsKeyPressed)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey vkey,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsToggleKeyOn)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CVirtualKey vkey,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* get_EditSession)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession** value);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyEventReceivedEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InputProfile)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsActive)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_HasFocusedTextBox)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxId)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxInfo)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxBounds)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionBounds)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* get_ConversionMode)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ConversionMode)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextConversionMode value);
    HRESULT (STDMETHODCALLTYPE* CreateEditSession)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession** result);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Deactivated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Deactivated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_KeyEventReceived)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyEventReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_KeyEventReceived)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FocusEntered)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusEntered)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FocusRemoved)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusRemoved)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ConversionModeChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CConversionModeChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ConversionModeChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextBoxInfoChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextBoxInfoChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextBoxContentChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextBoxContentChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CompositionTerminated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CompositionTerminated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ReconversionRequested)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CKeyboardInputProcessor___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReconversionRequested)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessorVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Range)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CIReconversionRequestedEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextBoxId)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextChangeSource* value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionBounds)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* IsContentAttributeChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxContentAttribute value,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxContentChangedEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId* value);
    HRESULT (STDMETHODCALLTYPE* get_InputScope)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
        enum __x_ABI_CWindows_CUI_CText_CCore_CCoreTextInputScope* value);
    HRESULT (STDMETHODCALLTYPE* get_AppName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Url)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Settings)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxSettings* value);
    HRESULT (STDMETHODCALLTYPE* get_DisabledFeatures)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo* This,
        enum __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxFeatures* value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextBoxInfo)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfoChangedEventArgs_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstSegment)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedSegment)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment** value);
    HRESULT (STDMETHODCALLTYPE* get_CaretPosition)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_CaretPosition)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* InsertText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This,
        HSTRING text,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment** result);
    HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This);
    HRESULT (STDMETHODCALLTYPE* CompleteUnconverted)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This);
    HRESULT (STDMETHODCALLTYPE* CompleteFirstSegment)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition* This);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegmentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Text)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Text)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ConvertedText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ConvertedText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UnconvertedText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_UnconvertedText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Range)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange* value);
    HRESULT (STDMETHODCALLTYPE* get_ConversionState)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        enum __x_ABI_CWindows_CUI_CText_CCore_CCoreTextFormatUpdatingReason* value);
    HRESULT (STDMETHODCALLTYPE* put_ConversionState)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        enum __x_ABI_CWindows_CUI_CText_CCore_CCoreTextFormatUpdatingReason value);
    HRESULT (STDMETHODCALLTYPE* get_Next)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment** value);
    HRESULT (STDMETHODCALLTYPE* get_Previous)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment** value);
    HRESULT (STDMETHODCALLTYPE* GetTextStyle)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyle* result);
    HRESULT (STDMETHODCALLTYPE* SetTextStyle)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextStyle value);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegmentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextCompositionSegment_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_TextBoxId)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId* value);
    HRESULT (STDMETHODCALLTYPE* get_TextLength)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PopulatedRange)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange* value);
    HRESULT (STDMETHODCALLTYPE* PopulateAsync)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange range,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* GetText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange range,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetSelectedRange)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange* result);
    HRESULT (STDMETHODCALLTYPE* SetSelectedRange)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange value);
    HRESULT (STDMETHODCALLTYPE* ReplaceText)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange replaceRange,
        HSTRING text,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Composition)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition** value);
    HRESULT (STDMETHODCALLTYPE* StartComposition)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition** result);
    HRESULT (STDMETHODCALLTYPE* StartReconversion)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        struct __x_ABI_CWindows_CUI_CText_CCore_CCoreTextRange range,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextComposition** result);
    HRESULT (STDMETHODCALLTYPE* SubmitPayload)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SubmitPayloadAsync)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CUI__CInput__CPreview__CText__CPayloadResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSessionVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSessionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetSubscription)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextInputServiceSubscription* result);
    HRESULT (STDMETHODCALLTYPE* SetSubscription)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextInputServiceSubscription subscription);
    HRESULT (STDMETHODCALLTYPE* get_HasFocusedTextBox)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxId)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CTextBoxId* value);
    HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxInfo)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextBoxInfo** value);
    HRESULT (STDMETHODCALLTYPE* get_FocusedTextBoxBounds)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* get_SelectionBounds)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CRect** value);
    HRESULT (STDMETHODCALLTYPE* CreateEditSession)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextEditSession** result);
    HRESULT (STDMETHODCALLTYPE* TryStartDelegation)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* StopDelegation)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This);
    HRESULT (STDMETHODCALLTYPE* add_FocusEntered)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CFocusEnteredEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusEntered)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FocusRemoved)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_FocusRemoved)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextBoxInfoChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxInfoChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextBoxInfoChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TextBoxContentChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextBoxContentChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_TextBoxContentChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CompositionTerminated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CompositionTerminated)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ReconversionRequested)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CReconversionRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReconversionRequested)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_InputDelegationModeChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CUI__CInput__CPreview__CText__CTextInputProvider___x_ABI_CWindows__CUI__CInput__CPreview__CText__CInputDelegationModeChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_InputDelegationModeChanged)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProviderVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateKeyboardInputProcessor)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This,
        HSTRING inputProfile,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CIKeyboardInputProcessor** result);
    HRESULT (STDMETHODCALLTYPE* CreateTextInputProvider)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService* This,
        HSTRING inputProfile,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputProvider** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentThread)(__x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics* This,
        __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputService** result);

        END_INTERFACE
    } __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CInput_CPreview_CText_CITextInputServiceStatics_INTERFACE_DEFINED__) */
    #endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

